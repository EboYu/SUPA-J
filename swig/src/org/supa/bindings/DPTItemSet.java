/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.supa.bindings;

public class DPTItemSet extends java.util.AbstractSet<SWIGTYPE_p_DPItem> {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected DPTItemSet(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DPTItemSet obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        SUPAJNI.delete_DPTItemSet(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public DPTItemSet(java.util.Collection<? extends SWIGTYPE_p_DPItem> collection) {
    this();
    addAll(collection);
  }

  public int size() {
    return sizeImpl();
  }

  public boolean add(SWIGTYPE_p_DPItem key) {
    return addImpl(key);
  }

  public boolean addAll(java.util.Collection<? extends SWIGTYPE_p_DPItem> collection) {
    boolean didAddElement = false;
    for (java.lang.Object object : collection) {
      didAddElement |= add((SWIGTYPE_p_DPItem)object);
    }

    return didAddElement;
  }

  public java.util.Iterator<SWIGTYPE_p_DPItem> iterator() {
    return new java.util.Iterator<SWIGTYPE_p_DPItem>() {
      private Iterator curr;
      private Iterator end;

      private java.util.Iterator<SWIGTYPE_p_DPItem> init() {
        curr = DPTItemSet.this.begin();
        end = DPTItemSet.this.end();
        return this;
      }

      public SWIGTYPE_p_DPItem next() {
        if (!hasNext()) {
          throw new java.util.NoSuchElementException();
        }

        // Save the current position, increment it,
        // then return the value at the position before the increment.
        final SWIGTYPE_p_DPItem currValue = curr.derefUnchecked();
        curr.incrementUnchecked();
        return currValue;
      }

      public boolean hasNext() {
        return curr.isNot(end);
      }
    }.init();
  }

  public boolean containsAll(java.util.Collection<?> collection) {
    for (java.lang.Object object : collection) {
      if (!contains(object)) {
        return false;
      }
    }

    return true;
  }

  public boolean contains(java.lang.Object object) {
    if (!(object instanceof SWIGTYPE_p_DPItem)) {
      return false;
    }

    return containsImpl((SWIGTYPE_p_DPItem)object);
  }

  public boolean removeAll(java.util.Collection<?> collection) {
    boolean didRemoveElement = false;
    for (java.lang.Object object : collection) {
      didRemoveElement |= remove(object);
    }

    return didRemoveElement;
  }

  public boolean remove(java.lang.Object object) {
    if (!(object instanceof SWIGTYPE_p_DPItem)) {
      return false;
    }

    return removeImpl((SWIGTYPE_p_DPItem)object);
  }

  static protected class Iterator {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    protected Iterator(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    protected static long getCPtr(Iterator obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    @SuppressWarnings("deprecation")
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          SUPAJNI.delete_DPTItemSet_Iterator(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    private void incrementUnchecked() {
      SUPAJNI.DPTItemSet_Iterator_incrementUnchecked(swigCPtr, this);
    }
  
    private SWIGTYPE_p_DPItem derefUnchecked() {
      return new SWIGTYPE_p_DPItem(SUPAJNI.DPTItemSet_Iterator_derefUnchecked(swigCPtr, this), true);
    }
  
    private boolean isNot(DPTItemSet.Iterator other) {
      return SUPAJNI.DPTItemSet_Iterator_isNot(swigCPtr, this, DPTItemSet.Iterator.getCPtr(other), other);
    }
  
  }

  public DPTItemSet() {
    this(SUPAJNI.new_DPTItemSet__SWIG_0(), true);
  }

  public DPTItemSet(DPTItemSet other) {
    this(SUPAJNI.new_DPTItemSet__SWIG_1(DPTItemSet.getCPtr(other), other), true);
  }

  public boolean isEmpty() {
    return SUPAJNI.DPTItemSet_isEmpty(swigCPtr, this);
  }

  public void clear() {
    SUPAJNI.DPTItemSet_clear(swigCPtr, this);
  }

  private DPTItemSet.Iterator begin() {
    return new DPTItemSet.Iterator(SUPAJNI.DPTItemSet_begin(swigCPtr, this), true);
  }

  private DPTItemSet.Iterator end() {
    return new DPTItemSet.Iterator(SUPAJNI.DPTItemSet_end(swigCPtr, this), true);
  }

  public boolean addImpl(SWIGTYPE_p_DPItem key) {
    return SUPAJNI.DPTItemSet_addImpl(swigCPtr, this, SWIGTYPE_p_DPItem.getCPtr(key));
  }

  private boolean containsImpl(SWIGTYPE_p_DPItem key) {
    return SUPAJNI.DPTItemSet_containsImpl(swigCPtr, this, SWIGTYPE_p_DPItem.getCPtr(key));
  }

  private boolean removeImpl(SWIGTYPE_p_DPItem key) {
    return SUPAJNI.DPTItemSet_removeImpl(swigCPtr, this, SWIGTYPE_p_DPItem.getCPtr(key));
  }

  private int sizeImpl() {
    return SUPAJNI.DPTItemSet_sizeImpl(swigCPtr, this);
  }

  private boolean hasNextImpl(DPTItemSet.Iterator itr) {
    return SUPAJNI.DPTItemSet_hasNextImpl(swigCPtr, this, DPTItemSet.Iterator.getCPtr(itr), itr);
  }

}
