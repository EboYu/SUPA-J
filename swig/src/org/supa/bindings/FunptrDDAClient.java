/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.supa.bindings;

public class FunptrDDAClient extends DDAClient {
  private transient long swigCPtr;

  protected FunptrDDAClient(long cPtr, boolean cMemoryOwn) {
    super(SUPAJNI.FunptrDDAClient_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(FunptrDDAClient obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        SUPAJNI.delete_FunptrDDAClient(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public FunptrDDAClient(SVFModule module) {
    this(SUPAJNI.new_FunptrDDAClient(SVFModule.getCPtr(module), module), true);
  }

  public NodeSet collectCandidateQueries(SWIGTYPE_p_PAG p) {
    return new NodeSet(SUPAJNI.FunptrDDAClient_collectCandidateQueries(swigCPtr, this, SWIGTYPE_p_PAG.getCPtr(p)), false);
  }

  public void performStat(PointerAnalysis pta) {
    SUPAJNI.FunptrDDAClient_performStat(swigCPtr, this, PointerAnalysis.getCPtr(pta), pta);
  }

}
