/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.supa.bindings;

public class SUPAJNI {
  public final static native void imaxdiv_t_quot_set(long jarg1, imaxdiv_t jarg1_, long jarg2);
  public final static native long imaxdiv_t_quot_get(long jarg1, imaxdiv_t jarg1_);
  public final static native void imaxdiv_t_rem_set(long jarg1, imaxdiv_t jarg1_, long jarg2);
  public final static native long imaxdiv_t_rem_get(long jarg1, imaxdiv_t jarg1_);
  public final static native long new_imaxdiv_t();
  public final static native void delete_imaxdiv_t(long jarg1);
  public final static native long imaxabs(long jarg1);
  public final static native long imaxdiv(long jarg1, long jarg2);
  public final static native long strtoimax(String jarg1, long jarg2, int jarg3);
  public final static native java.math.BigInteger strtoumax(String jarg1, long jarg2, int jarg3);
  public final static native byte[] cdata(long jarg1, int jarg2);
  public final static native void memmove(long jarg1, byte[] jarg2);
  public final static native double cos(double jarg1);
  public final static native double sin(double jarg1);
  public final static native double tan(double jarg1);
  public final static native double acos(double jarg1);
  public final static native double asin(double jarg1);
  public final static native double atan(double jarg1);
  public final static native double atan2(double jarg1, double jarg2);
  public final static native double cosh(double jarg1);
  public final static native double sinh(double jarg1);
  public final static native double tanh(double jarg1);
  public final static native double exp(double jarg1);
  public final static native double log(double jarg1);
  public final static native double log10(double jarg1);
  public final static native double pow(double jarg1, double jarg2);
  public final static native double sqrt(double jarg1);
  public final static native double fabs(double jarg1);
  public final static native double ceil(double jarg1);
  public final static native double floor(double jarg1);
  public final static native double fmod(double jarg1, double jarg2);
  public final static native double M_E_get();
  public final static native double M_LOG2E_get();
  public final static native double M_LOG10E_get();
  public final static native double M_LN2_get();
  public final static native double M_LN10_get();
  public final static native double M_PI_get();
  public final static native double M_PI_2_get();
  public final static native double M_PI_4_get();
  public final static native double M_1_PI_get();
  public final static native double M_2_PI_get();
  public final static native double M_2_SQRTPI_get();
  public final static native double M_SQRT2_get();
  public final static native double M_SQRT1_2_get();
  public final static native void DPTItemSet_Iterator_incrementUnchecked(long jarg1, DPTItemSet.Iterator jarg1_);
  public final static native long DPTItemSet_Iterator_derefUnchecked(long jarg1, DPTItemSet.Iterator jarg1_);
  public final static native boolean DPTItemSet_Iterator_isNot(long jarg1, DPTItemSet.Iterator jarg1_, long jarg2, DPTItemSet.Iterator jarg2_);
  public final static native void delete_DPTItemSet_Iterator(long jarg1);
  public final static native long new_DPTItemSet__SWIG_0();
  public final static native long new_DPTItemSet__SWIG_1(long jarg1, DPTItemSet jarg1_);
  public final static native boolean DPTItemSet_isEmpty(long jarg1, DPTItemSet jarg1_);
  public final static native void DPTItemSet_clear(long jarg1, DPTItemSet jarg1_);
  public final static native long DPTItemSet_begin(long jarg1, DPTItemSet jarg1_);
  public final static native long DPTItemSet_end(long jarg1, DPTItemSet jarg1_);
  public final static native boolean DPTItemSet_addImpl(long jarg1, DPTItemSet jarg1_, long jarg2);
  public final static native boolean DPTItemSet_containsImpl(long jarg1, DPTItemSet jarg1_, long jarg2);
  public final static native boolean DPTItemSet_removeImpl(long jarg1, DPTItemSet jarg1_, long jarg2);
  public final static native int DPTItemSet_sizeImpl(long jarg1, DPTItemSet jarg1_);
  public final static native boolean DPTItemSet_hasNextImpl(long jarg1, DPTItemSet jarg1_, long jarg2, DPTItemSet.Iterator jarg2_);
  public final static native void delete_DPTItemSet(long jarg1);
  public final static native void ConstSVFGEdgeSet_Iterator_incrementUnchecked(long jarg1, ConstSVFGEdgeSet.Iterator jarg1_);
  public final static native long ConstSVFGEdgeSet_Iterator_derefUnchecked(long jarg1, ConstSVFGEdgeSet.Iterator jarg1_);
  public final static native boolean ConstSVFGEdgeSet_Iterator_isNot(long jarg1, ConstSVFGEdgeSet.Iterator jarg1_, long jarg2, ConstSVFGEdgeSet.Iterator jarg2_);
  public final static native void delete_ConstSVFGEdgeSet_Iterator(long jarg1);
  public final static native long new_ConstSVFGEdgeSet__SWIG_0();
  public final static native long new_ConstSVFGEdgeSet__SWIG_1(long jarg1, ConstSVFGEdgeSet jarg1_);
  public final static native boolean ConstSVFGEdgeSet_isEmpty(long jarg1, ConstSVFGEdgeSet jarg1_);
  public final static native void ConstSVFGEdgeSet_clear(long jarg1, ConstSVFGEdgeSet jarg1_);
  public final static native long ConstSVFGEdgeSet_begin(long jarg1, ConstSVFGEdgeSet jarg1_);
  public final static native long ConstSVFGEdgeSet_end(long jarg1, ConstSVFGEdgeSet jarg1_);
  public final static native boolean ConstSVFGEdgeSet_addImpl(long jarg1, ConstSVFGEdgeSet jarg1_, long jarg2);
  public final static native boolean ConstSVFGEdgeSet_containsImpl(long jarg1, ConstSVFGEdgeSet jarg1_, long jarg2);
  public final static native boolean ConstSVFGEdgeSet_removeImpl(long jarg1, ConstSVFGEdgeSet jarg1_, long jarg2);
  public final static native int ConstSVFGEdgeSet_sizeImpl(long jarg1, ConstSVFGEdgeSet jarg1_);
  public final static native boolean ConstSVFGEdgeSet_hasNextImpl(long jarg1, ConstSVFGEdgeSet jarg1_, long jarg2, ConstSVFGEdgeSet.Iterator jarg2_);
  public final static native void delete_ConstSVFGEdgeSet(long jarg1);
  public final static native long new_DPItemToCPtSetMap__SWIG_0();
  public final static native long new_DPItemToCPtSetMap__SWIG_1(long jarg1, DPItemToCPtSetMap jarg1_);
  public final static native long DPItemToCPtSetMap_Iterator_getNextUnchecked(long jarg1, DPItemToCPtSetMap.Iterator jarg1_);
  public final static native boolean DPItemToCPtSetMap_Iterator_isNot(long jarg1, DPItemToCPtSetMap.Iterator jarg1_, long jarg2, DPItemToCPtSetMap.Iterator jarg2_);
  public final static native long DPItemToCPtSetMap_Iterator_getKey(long jarg1, DPItemToCPtSetMap.Iterator jarg1_);
  public final static native long DPItemToCPtSetMap_Iterator_getValue(long jarg1, DPItemToCPtSetMap.Iterator jarg1_);
  public final static native void DPItemToCPtSetMap_Iterator_setValue(long jarg1, DPItemToCPtSetMap.Iterator jarg1_, long jarg2);
  public final static native void delete_DPItemToCPtSetMap_Iterator(long jarg1);
  public final static native boolean DPItemToCPtSetMap_isEmpty(long jarg1, DPItemToCPtSetMap jarg1_);
  public final static native void DPItemToCPtSetMap_clear(long jarg1, DPItemToCPtSetMap jarg1_);
  public final static native long DPItemToCPtSetMap_find(long jarg1, DPItemToCPtSetMap jarg1_, long jarg2);
  public final static native long DPItemToCPtSetMap_begin(long jarg1, DPItemToCPtSetMap jarg1_);
  public final static native long DPItemToCPtSetMap_end(long jarg1, DPItemToCPtSetMap jarg1_);
  public final static native int DPItemToCPtSetMap_sizeImpl(long jarg1, DPItemToCPtSetMap jarg1_);
  public final static native boolean DPItemToCPtSetMap_containsImpl(long jarg1, DPItemToCPtSetMap jarg1_, long jarg2);
  public final static native void DPItemToCPtSetMap_putUnchecked(long jarg1, DPItemToCPtSetMap jarg1_, long jarg2, long jarg3);
  public final static native void DPItemToCPtSetMap_removeUnchecked(long jarg1, DPItemToCPtSetMap jarg1_, long jarg2, DPItemToCPtSetMap.Iterator jarg2_);
  public final static native void delete_DPItemToCPtSetMap(long jarg1);
  public final static native long new_DPMToCVarMap__SWIG_0();
  public final static native long new_DPMToCVarMap__SWIG_1(long jarg1, DPMToCVarMap jarg1_);
  public final static native long DPMToCVarMap_Iterator_getNextUnchecked(long jarg1, DPMToCVarMap.Iterator jarg1_);
  public final static native boolean DPMToCVarMap_Iterator_isNot(long jarg1, DPMToCVarMap.Iterator jarg1_, long jarg2, DPMToCVarMap.Iterator jarg2_);
  public final static native long DPMToCVarMap_Iterator_getKey(long jarg1, DPMToCVarMap.Iterator jarg1_);
  public final static native long DPMToCVarMap_Iterator_getValue(long jarg1, DPMToCVarMap.Iterator jarg1_);
  public final static native void DPMToCVarMap_Iterator_setValue(long jarg1, DPMToCVarMap.Iterator jarg1_, long jarg2);
  public final static native void delete_DPMToCVarMap_Iterator(long jarg1);
  public final static native boolean DPMToCVarMap_isEmpty(long jarg1, DPMToCVarMap jarg1_);
  public final static native void DPMToCVarMap_clear(long jarg1, DPMToCVarMap jarg1_);
  public final static native long DPMToCVarMap_find(long jarg1, DPMToCVarMap jarg1_, long jarg2);
  public final static native long DPMToCVarMap_begin(long jarg1, DPMToCVarMap jarg1_);
  public final static native long DPMToCVarMap_end(long jarg1, DPMToCVarMap jarg1_);
  public final static native int DPMToCVarMap_sizeImpl(long jarg1, DPMToCVarMap jarg1_);
  public final static native boolean DPMToCVarMap_containsImpl(long jarg1, DPMToCVarMap jarg1_, long jarg2);
  public final static native void DPMToCVarMap_putUnchecked(long jarg1, DPMToCVarMap jarg1_, long jarg2, long jarg3);
  public final static native void DPMToCVarMap_removeUnchecked(long jarg1, DPMToCVarMap jarg1_, long jarg2, DPMToCVarMap.Iterator jarg2_);
  public final static native void delete_DPMToCVarMap(long jarg1);
  public final static native long new_DPMToDPMMap__SWIG_0();
  public final static native long new_DPMToDPMMap__SWIG_1(long jarg1, DPMToDPMMap jarg1_);
  public final static native long DPMToDPMMap_Iterator_getNextUnchecked(long jarg1, DPMToDPMMap.Iterator jarg1_);
  public final static native boolean DPMToDPMMap_Iterator_isNot(long jarg1, DPMToDPMMap.Iterator jarg1_, long jarg2, DPMToDPMMap.Iterator jarg2_);
  public final static native long DPMToDPMMap_Iterator_getKey(long jarg1, DPMToDPMMap.Iterator jarg1_);
  public final static native long DPMToDPMMap_Iterator_getValue(long jarg1, DPMToDPMMap.Iterator jarg1_);
  public final static native void DPMToDPMMap_Iterator_setValue(long jarg1, DPMToDPMMap.Iterator jarg1_, long jarg2);
  public final static native void delete_DPMToDPMMap_Iterator(long jarg1);
  public final static native boolean DPMToDPMMap_isEmpty(long jarg1, DPMToDPMMap jarg1_);
  public final static native void DPMToDPMMap_clear(long jarg1, DPMToDPMMap jarg1_);
  public final static native long DPMToDPMMap_find(long jarg1, DPMToDPMMap jarg1_, long jarg2);
  public final static native long DPMToDPMMap_begin(long jarg1, DPMToDPMMap jarg1_);
  public final static native long DPMToDPMMap_end(long jarg1, DPMToDPMMap jarg1_);
  public final static native int DPMToDPMMap_sizeImpl(long jarg1, DPMToDPMMap jarg1_);
  public final static native boolean DPMToDPMMap_containsImpl(long jarg1, DPMToDPMMap jarg1_, long jarg2);
  public final static native void DPMToDPMMap_putUnchecked(long jarg1, DPMToDPMMap jarg1_, long jarg2, long jarg3);
  public final static native void DPMToDPMMap_removeUnchecked(long jarg1, DPMToDPMMap jarg1_, long jarg2, DPMToDPMMap.Iterator jarg2_);
  public final static native void delete_DPMToDPMMap(long jarg1);
  public final static native long new_StoreToPMSetMap__SWIG_0();
  public final static native long new_StoreToPMSetMap__SWIG_1(long jarg1, StoreToPMSetMap jarg1_);
  public final static native long StoreToPMSetMap_Iterator_getNextUnchecked(long jarg1, StoreToPMSetMap.Iterator jarg1_);
  public final static native boolean StoreToPMSetMap_Iterator_isNot(long jarg1, StoreToPMSetMap.Iterator jarg1_, long jarg2, StoreToPMSetMap.Iterator jarg2_);
  public final static native long StoreToPMSetMap_Iterator_getKey(long jarg1, StoreToPMSetMap.Iterator jarg1_);
  public final static native long StoreToPMSetMap_Iterator_getValue(long jarg1, StoreToPMSetMap.Iterator jarg1_);
  public final static native void StoreToPMSetMap_Iterator_setValue(long jarg1, StoreToPMSetMap.Iterator jarg1_, long jarg2);
  public final static native void delete_StoreToPMSetMap_Iterator(long jarg1);
  public final static native boolean StoreToPMSetMap_isEmpty(long jarg1, StoreToPMSetMap jarg1_);
  public final static native void StoreToPMSetMap_clear(long jarg1, StoreToPMSetMap jarg1_);
  public final static native long StoreToPMSetMap_find(long jarg1, StoreToPMSetMap jarg1_, long jarg2);
  public final static native long StoreToPMSetMap_begin(long jarg1, StoreToPMSetMap jarg1_);
  public final static native long StoreToPMSetMap_end(long jarg1, StoreToPMSetMap jarg1_);
  public final static native int StoreToPMSetMap_sizeImpl(long jarg1, StoreToPMSetMap jarg1_);
  public final static native boolean StoreToPMSetMap_containsImpl(long jarg1, StoreToPMSetMap jarg1_, long jarg2);
  public final static native void StoreToPMSetMap_putUnchecked(long jarg1, StoreToPMSetMap jarg1_, long jarg2, long jarg3);
  public final static native void StoreToPMSetMap_removeUnchecked(long jarg1, StoreToPMSetMap jarg1_, long jarg2, StoreToPMSetMap.Iterator jarg2_);
  public final static native void delete_StoreToPMSetMap(long jarg1);
  public final static native void CallSiteSet_Iterator_incrementUnchecked(long jarg1);
  public final static native long CallSiteSet_Iterator_derefUnchecked(long jarg1);
  public final static native boolean CallSiteSet_Iterator_isNot(long jarg1, long jarg2);
  public final static native void delete_CallSiteSet_Iterator(long jarg1);
  public final static native long new_CallSiteSet__SWIG_0();
  public final static native long new_CallSiteSet__SWIG_1(long jarg1, CallSiteSet jarg1_);
  public final static native boolean CallSiteSet_isEmpty(long jarg1, CallSiteSet jarg1_);
  public final static native void CallSiteSet_clear(long jarg1, CallSiteSet jarg1_);
  public final static native long CallSiteSet_begin(long jarg1, CallSiteSet jarg1_);
  public final static native long CallSiteSet_end(long jarg1, CallSiteSet jarg1_);
  public final static native boolean CallSiteSet_addImpl(long jarg1, CallSiteSet jarg1_, long jarg2);
  public final static native boolean CallSiteSet_containsImpl(long jarg1, CallSiteSet jarg1_, long jarg2);
  public final static native boolean CallSiteSet_removeImpl(long jarg1, CallSiteSet jarg1_, long jarg2);
  public final static native int CallSiteSet_sizeImpl(long jarg1, CallSiteSet jarg1_);
  public final static native boolean CallSiteSet_hasNextImpl(long jarg1, CallSiteSet jarg1_, long jarg2);
  public final static native void delete_CallSiteSet(long jarg1);
  public final static native void FunctionSet_Iterator_incrementUnchecked(long jarg1);
  public final static native long FunctionSet_Iterator_derefUnchecked(long jarg1);
  public final static native boolean FunctionSet_Iterator_isNot(long jarg1, long jarg2);
  public final static native void delete_FunctionSet_Iterator(long jarg1);
  public final static native long new_FunctionSet__SWIG_0();
  public final static native long new_FunctionSet__SWIG_1(long jarg1, FunctionSet jarg1_);
  public final static native boolean FunctionSet_isEmpty(long jarg1, FunctionSet jarg1_);
  public final static native void FunctionSet_clear(long jarg1, FunctionSet jarg1_);
  public final static native long FunctionSet_begin(long jarg1, FunctionSet jarg1_);
  public final static native long FunctionSet_end(long jarg1, FunctionSet jarg1_);
  public final static native boolean FunctionSet_addImpl(long jarg1, FunctionSet jarg1_, long jarg2);
  public final static native boolean FunctionSet_containsImpl(long jarg1, FunctionSet jarg1_, long jarg2);
  public final static native boolean FunctionSet_removeImpl(long jarg1, FunctionSet jarg1_, long jarg2);
  public final static native int FunctionSet_sizeImpl(long jarg1, FunctionSet jarg1_);
  public final static native boolean FunctionSet_hasNextImpl(long jarg1, FunctionSet jarg1_, long jarg2);
  public final static native void delete_FunctionSet(long jarg1);
  public final static native void VTableSet_Iterator_incrementUnchecked(long jarg1);
  public final static native long VTableSet_Iterator_derefUnchecked(long jarg1);
  public final static native boolean VTableSet_Iterator_isNot(long jarg1, long jarg2);
  public final static native void delete_VTableSet_Iterator(long jarg1);
  public final static native long new_VTableSet__SWIG_0();
  public final static native long new_VTableSet__SWIG_1(long jarg1, VTableSet jarg1_);
  public final static native boolean VTableSet_isEmpty(long jarg1, VTableSet jarg1_);
  public final static native void VTableSet_clear(long jarg1, VTableSet jarg1_);
  public final static native long VTableSet_begin(long jarg1, VTableSet jarg1_);
  public final static native long VTableSet_end(long jarg1, VTableSet jarg1_);
  public final static native boolean VTableSet_addImpl(long jarg1, VTableSet jarg1_, long jarg2);
  public final static native boolean VTableSet_containsImpl(long jarg1, VTableSet jarg1_, long jarg2);
  public final static native boolean VTableSet_removeImpl(long jarg1, VTableSet jarg1_, long jarg2);
  public final static native int VTableSet_sizeImpl(long jarg1, VTableSet jarg1_);
  public final static native boolean VTableSet_hasNextImpl(long jarg1, VTableSet jarg1_, long jarg2);
  public final static native void delete_VTableSet(long jarg1);
  public final static native long new_CallEdgeMap__SWIG_0();
  public final static native long new_CallEdgeMap__SWIG_1(long jarg1, CallEdgeMap jarg1_);
  public final static native long CallEdgeMap_Iterator_getNextUnchecked(long jarg1);
  public final static native boolean CallEdgeMap_Iterator_isNot(long jarg1, long jarg2);
  public final static native long CallEdgeMap_Iterator_getKey(long jarg1);
  public final static native long CallEdgeMap_Iterator_getValue(long jarg1);
  public final static native void CallEdgeMap_Iterator_setValue(long jarg1, long jarg2);
  public final static native void delete_CallEdgeMap_Iterator(long jarg1);
  public final static native boolean CallEdgeMap_isEmpty(long jarg1, CallEdgeMap jarg1_);
  public final static native void CallEdgeMap_clear(long jarg1, CallEdgeMap jarg1_);
  public final static native long CallEdgeMap_find(long jarg1, CallEdgeMap jarg1_, long jarg2);
  public final static native long CallEdgeMap_begin(long jarg1, CallEdgeMap jarg1_);
  public final static native long CallEdgeMap_end(long jarg1, CallEdgeMap jarg1_);
  public final static native int CallEdgeMap_sizeImpl(long jarg1, CallEdgeMap jarg1_);
  public final static native boolean CallEdgeMap_containsImpl(long jarg1, CallEdgeMap jarg1_, long jarg2);
  public final static native void CallEdgeMap_putUnchecked(long jarg1, CallEdgeMap jarg1_, long jarg2, long jarg3);
  public final static native void CallEdgeMap_removeUnchecked(long jarg1, CallEdgeMap jarg1_, long jarg2);
  public final static native void delete_CallEdgeMap(long jarg1);
  public final static native long new_PtrToBVPtsMap__SWIG_0();
  public final static native long new_PtrToBVPtsMap__SWIG_1(long jarg1, PtrToBVPtsMap jarg1_);
  public final static native long PtrToBVPtsMap_Iterator_getNextUnchecked(long jarg1);
  public final static native boolean PtrToBVPtsMap_Iterator_isNot(long jarg1, long jarg2);
  public final static native long PtrToBVPtsMap_Iterator_getKey(long jarg1);
  public final static native long PtrToBVPtsMap_Iterator_getValue(long jarg1);
  public final static native void PtrToBVPtsMap_Iterator_setValue(long jarg1, long jarg2);
  public final static native void delete_PtrToBVPtsMap_Iterator(long jarg1);
  public final static native boolean PtrToBVPtsMap_isEmpty(long jarg1, PtrToBVPtsMap jarg1_);
  public final static native void PtrToBVPtsMap_clear(long jarg1, PtrToBVPtsMap jarg1_);
  public final static native long PtrToBVPtsMap_find(long jarg1, PtrToBVPtsMap jarg1_, long jarg2);
  public final static native long PtrToBVPtsMap_begin(long jarg1, PtrToBVPtsMap jarg1_);
  public final static native long PtrToBVPtsMap_end(long jarg1, PtrToBVPtsMap jarg1_);
  public final static native int PtrToBVPtsMap_sizeImpl(long jarg1, PtrToBVPtsMap jarg1_);
  public final static native boolean PtrToBVPtsMap_containsImpl(long jarg1, PtrToBVPtsMap jarg1_, long jarg2);
  public final static native void PtrToBVPtsMap_putUnchecked(long jarg1, PtrToBVPtsMap jarg1_, long jarg2, long jarg3);
  public final static native void PtrToBVPtsMap_removeUnchecked(long jarg1, PtrToBVPtsMap jarg1_, long jarg2);
  public final static native void delete_PtrToBVPtsMap(long jarg1);
  public final static native long new_PtrCPtsMap__SWIG_0();
  public final static native long new_PtrCPtsMap__SWIG_1(long jarg1, PtrCPtsMap jarg1_);
  public final static native long PtrCPtsMap_Iterator_getNextUnchecked(long jarg1);
  public final static native boolean PtrCPtsMap_Iterator_isNot(long jarg1, long jarg2);
  public final static native long PtrCPtsMap_Iterator_getKey(long jarg1);
  public final static native long PtrCPtsMap_Iterator_getValue(long jarg1);
  public final static native void PtrCPtsMap_Iterator_setValue(long jarg1, long jarg2);
  public final static native void delete_PtrCPtsMap_Iterator(long jarg1);
  public final static native boolean PtrCPtsMap_isEmpty(long jarg1, PtrCPtsMap jarg1_);
  public final static native void PtrCPtsMap_clear(long jarg1, PtrCPtsMap jarg1_);
  public final static native long PtrCPtsMap_find(long jarg1, PtrCPtsMap jarg1_, long jarg2);
  public final static native long PtrCPtsMap_begin(long jarg1, PtrCPtsMap jarg1_);
  public final static native long PtrCPtsMap_end(long jarg1, PtrCPtsMap jarg1_);
  public final static native int PtrCPtsMap_sizeImpl(long jarg1, PtrCPtsMap jarg1_);
  public final static native boolean PtrCPtsMap_containsImpl(long jarg1, PtrCPtsMap jarg1_, long jarg2);
  public final static native void PtrCPtsMap_putUnchecked(long jarg1, PtrCPtsMap jarg1_, long jarg2, long jarg3);
  public final static native void PtrCPtsMap_removeUnchecked(long jarg1, PtrCPtsMap jarg1_, long jarg2);
  public final static native void delete_PtrCPtsMap(long jarg1);
  public final static native long new_NodePair__SWIG_0();
  public final static native long new_NodePair__SWIG_1(long jarg1, long jarg2);
  public final static native long new_NodePair__SWIG_2(long jarg1, NodePair jarg1_);
  public final static native void NodePair_first_set(long jarg1, NodePair jarg1_, long jarg2);
  public final static native long NodePair_first_get(long jarg1, NodePair jarg1_);
  public final static native void NodePair_second_set(long jarg1, NodePair jarg1_, long jarg2);
  public final static native long NodePair_second_get(long jarg1, NodePair jarg1_);
  public final static native void delete_NodePair(long jarg1);
  public final static native void NodeSet_Iterator_incrementUnchecked(long jarg1);
  public final static native long NodeSet_Iterator_derefUnchecked(long jarg1);
  public final static native boolean NodeSet_Iterator_isNot(long jarg1, long jarg2);
  public final static native void delete_NodeSet_Iterator(long jarg1);
  public final static native long new_NodeSet__SWIG_0();
  public final static native long new_NodeSet__SWIG_1(long jarg1, NodeSet jarg1_);
  public final static native boolean NodeSet_isEmpty(long jarg1, NodeSet jarg1_);
  public final static native void NodeSet_clear(long jarg1, NodeSet jarg1_);
  public final static native long NodeSet_begin(long jarg1, NodeSet jarg1_);
  public final static native long NodeSet_end(long jarg1, NodeSet jarg1_);
  public final static native boolean NodeSet_addImpl(long jarg1, NodeSet jarg1_, long jarg2);
  public final static native boolean NodeSet_containsImpl(long jarg1, NodeSet jarg1_, long jarg2);
  public final static native boolean NodeSet_removeImpl(long jarg1, NodeSet jarg1_, long jarg2);
  public final static native int NodeSet_sizeImpl(long jarg1, NodeSet jarg1_);
  public final static native boolean NodeSet_hasNextImpl(long jarg1, NodeSet jarg1_, long jarg2);
  public final static native void delete_NodeSet(long jarg1);
  public final static native long new_NodeVector__SWIG_0();
  public final static native long new_NodeVector__SWIG_1(long jarg1, NodeVector jarg1_);
  public final static native long NodeVector_capacity(long jarg1, NodeVector jarg1_);
  public final static native void NodeVector_reserve(long jarg1, NodeVector jarg1_, long jarg2);
  public final static native boolean NodeVector_isEmpty(long jarg1, NodeVector jarg1_);
  public final static native void NodeVector_clear(long jarg1, NodeVector jarg1_);
  public final static native long new_NodeVector__SWIG_2(int jarg1, long jarg2);
  public final static native int NodeVector_doSize(long jarg1, NodeVector jarg1_);
  public final static native void NodeVector_doAdd__SWIG_0(long jarg1, NodeVector jarg1_, long jarg2);
  public final static native void NodeVector_doAdd__SWIG_1(long jarg1, NodeVector jarg1_, int jarg2, long jarg3);
  public final static native long NodeVector_doRemove(long jarg1, NodeVector jarg1_, int jarg2);
  public final static native long NodeVector_doGet(long jarg1, NodeVector jarg1_, int jarg2);
  public final static native long NodeVector_doSet(long jarg1, NodeVector jarg1_, int jarg2, long jarg3);
  public final static native void NodeVector_doRemoveRange(long jarg1, NodeVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_NodeVector(long jarg1);
  public final static native long new_EdgeVector__SWIG_0();
  public final static native long new_EdgeVector__SWIG_1(long jarg1, NodeVector jarg1_);
  public final static native long EdgeVector_capacity(long jarg1, NodeVector jarg1_);
  public final static native void EdgeVector_reserve(long jarg1, NodeVector jarg1_, long jarg2);
  public final static native boolean EdgeVector_isEmpty(long jarg1, NodeVector jarg1_);
  public final static native void EdgeVector_clear(long jarg1, NodeVector jarg1_);
  public final static native long new_EdgeVector__SWIG_2(int jarg1, long jarg2);
  public final static native int EdgeVector_doSize(long jarg1, NodeVector jarg1_);
  public final static native void EdgeVector_doAdd__SWIG_0(long jarg1, NodeVector jarg1_, long jarg2);
  public final static native void EdgeVector_doAdd__SWIG_1(long jarg1, NodeVector jarg1_, int jarg2, long jarg3);
  public final static native long EdgeVector_doRemove(long jarg1, NodeVector jarg1_, int jarg2);
  public final static native long EdgeVector_doGet(long jarg1, NodeVector jarg1_, int jarg2);
  public final static native long EdgeVector_doSet(long jarg1, NodeVector jarg1_, int jarg2, long jarg3);
  public final static native void EdgeVector_doRemoveRange(long jarg1, NodeVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_EdgeVector(long jarg1);
  public final static native void NodeList_Iterator_set_unchecked(long jarg1, long jarg2);
  public final static native long NodeList_Iterator_next_unchecked(long jarg1);
  public final static native long NodeList_Iterator_previous_unchecked(long jarg1);
  public final static native long NodeList_Iterator_deref_unchecked(long jarg1);
  public final static native long NodeList_Iterator_advance_unchecked(long jarg1, long jarg2);
  public final static native void delete_NodeList_Iterator(long jarg1);
  public final static native long new_NodeList__SWIG_0();
  public final static native long new_NodeList__SWIG_1(long jarg1, NodeList jarg1_);
  public final static native boolean NodeList_isEmpty(long jarg1, NodeList jarg1_);
  public final static native void NodeList_clear(long jarg1, NodeList jarg1_);
  public final static native long NodeList_remove(long jarg1, NodeList jarg1_, long jarg2);
  public final static native void NodeList_removeLast(long jarg1, NodeList jarg1_);
  public final static native void NodeList_removeFirst(long jarg1, NodeList jarg1_);
  public final static native void NodeList_addLast(long jarg1, NodeList jarg1_, long jarg2);
  public final static native void NodeList_addFirst(long jarg1, NodeList jarg1_, long jarg2);
  public final static native long NodeList_begin(long jarg1, NodeList jarg1_);
  public final static native long NodeList_end(long jarg1, NodeList jarg1_);
  public final static native long NodeList_insert(long jarg1, NodeList jarg1_, long jarg2, long jarg3);
  public final static native long new_NodeList__SWIG_2(int jarg1, long jarg2);
  public final static native int NodeList_doSize(long jarg1, NodeList jarg1_);
  public final static native int NodeList_doPreviousIndex(long jarg1, NodeList jarg1_, long jarg2);
  public final static native int NodeList_doNextIndex(long jarg1, NodeList jarg1_, long jarg2);
  public final static native boolean NodeList_doHasNext(long jarg1, NodeList jarg1_, long jarg2);
  public final static native void delete_NodeList(long jarg1);
  public final static native boolean NodeDeque_empty(long jarg1, NodeDeque jarg1_);
  public final static native long new_NodeDeque__SWIG_0();
  public final static native long new_NodeDeque__SWIG_1(long jarg1, long jarg2);
  public final static native long new_NodeDeque__SWIG_2(long jarg1);
  public final static native long new_NodeDeque__SWIG_3(long jarg1, NodeDeque jarg1_);
  public final static native void delete_NodeDeque(long jarg1);
  public final static native void NodeDeque_assign(long jarg1, NodeDeque jarg1_, long jarg2, long jarg3);
  public final static native void NodeDeque_swap(long jarg1, NodeDeque jarg1_, long jarg2, NodeDeque jarg2_);
  public final static native long NodeDeque_size(long jarg1, NodeDeque jarg1_);
  public final static native long NodeDeque_max_size(long jarg1, NodeDeque jarg1_);
  public final static native void NodeDeque_resize__SWIG_0(long jarg1, NodeDeque jarg1_, long jarg2, long jarg3);
  public final static native void NodeDeque_resize__SWIG_1(long jarg1, NodeDeque jarg1_, long jarg2);
  public final static native long NodeDeque_front(long jarg1, NodeDeque jarg1_);
  public final static native long NodeDeque_back(long jarg1, NodeDeque jarg1_);
  public final static native void NodeDeque_push_front(long jarg1, NodeDeque jarg1_, long jarg2);
  public final static native void NodeDeque_push_back(long jarg1, NodeDeque jarg1_, long jarg2);
  public final static native void NodeDeque_pop_front(long jarg1, NodeDeque jarg1_);
  public final static native void NodeDeque_pop_back(long jarg1, NodeDeque jarg1_);
  public final static native void NodeDeque_clear(long jarg1, NodeDeque jarg1_);
  public final static native long NodeDeque_getitem(long jarg1, NodeDeque jarg1_, int jarg2);
  public final static native void NodeDeque_setitem(long jarg1, NodeDeque jarg1_, int jarg2, long jarg3);
  public final static native void NodeDeque_delitem(long jarg1, NodeDeque jarg1_, int jarg2);
  public final static native long NodeDeque_getslice(long jarg1, NodeDeque jarg1_, int jarg2, int jarg3);
  public final static native void NodeDeque_setslice(long jarg1, NodeDeque jarg1_, int jarg2, int jarg3, long jarg4, NodeDeque jarg4_);
  public final static native void NodeDeque_delslice(long jarg1, NodeDeque jarg1_, int jarg2, int jarg3);
  public final static native long new_NUMStatMap__SWIG_0();
  public final static native long new_NUMStatMap__SWIG_1(long jarg1, NUMStatMap jarg1_);
  public final static native long NUMStatMap_Iterator_getNextUnchecked(long jarg1);
  public final static native boolean NUMStatMap_Iterator_isNot(long jarg1, long jarg2);
  public final static native String NUMStatMap_Iterator_getKey(long jarg1);
  public final static native long NUMStatMap_Iterator_getValue(long jarg1);
  public final static native void NUMStatMap_Iterator_setValue(long jarg1, long jarg2);
  public final static native void delete_NUMStatMap_Iterator(long jarg1);
  public final static native boolean NUMStatMap_isEmpty(long jarg1, NUMStatMap jarg1_);
  public final static native void NUMStatMap_clear(long jarg1, NUMStatMap jarg1_);
  public final static native long NUMStatMap_find(long jarg1, NUMStatMap jarg1_, String jarg2);
  public final static native long NUMStatMap_begin(long jarg1, NUMStatMap jarg1_);
  public final static native long NUMStatMap_end(long jarg1, NUMStatMap jarg1_);
  public final static native int NUMStatMap_sizeImpl(long jarg1, NUMStatMap jarg1_);
  public final static native boolean NUMStatMap_containsImpl(long jarg1, NUMStatMap jarg1_, String jarg2);
  public final static native void NUMStatMap_putUnchecked(long jarg1, NUMStatMap jarg1_, String jarg2, long jarg3);
  public final static native void NUMStatMap_removeUnchecked(long jarg1, NUMStatMap jarg1_, long jarg2);
  public final static native void delete_NUMStatMap(long jarg1);
  public final static native long new_TIMEStatMap__SWIG_0();
  public final static native long new_TIMEStatMap__SWIG_1(long jarg1, TIMEStatMap jarg1_);
  public final static native long TIMEStatMap_Iterator_getNextUnchecked(long jarg1, TIMEStatMap.Iterator jarg1_);
  public final static native boolean TIMEStatMap_Iterator_isNot(long jarg1, TIMEStatMap.Iterator jarg1_, long jarg2, TIMEStatMap.Iterator jarg2_);
  public final static native String TIMEStatMap_Iterator_getKey(long jarg1, TIMEStatMap.Iterator jarg1_);
  public final static native double TIMEStatMap_Iterator_getValue(long jarg1, TIMEStatMap.Iterator jarg1_);
  public final static native void TIMEStatMap_Iterator_setValue(long jarg1, TIMEStatMap.Iterator jarg1_, double jarg2);
  public final static native void delete_TIMEStatMap_Iterator(long jarg1);
  public final static native boolean TIMEStatMap_isEmpty(long jarg1, TIMEStatMap jarg1_);
  public final static native void TIMEStatMap_clear(long jarg1, TIMEStatMap jarg1_);
  public final static native long TIMEStatMap_find(long jarg1, TIMEStatMap jarg1_, String jarg2);
  public final static native long TIMEStatMap_begin(long jarg1, TIMEStatMap jarg1_);
  public final static native long TIMEStatMap_end(long jarg1, TIMEStatMap jarg1_);
  public final static native int TIMEStatMap_sizeImpl(long jarg1, TIMEStatMap jarg1_);
  public final static native boolean TIMEStatMap_containsImpl(long jarg1, TIMEStatMap jarg1_, String jarg2);
  public final static native void TIMEStatMap_putUnchecked(long jarg1, TIMEStatMap jarg1_, String jarg2, double jarg3);
  public final static native void TIMEStatMap_removeUnchecked(long jarg1, TIMEStatMap jarg1_, long jarg2, TIMEStatMap.Iterator jarg2_);
  public final static native void delete_TIMEStatMap(long jarg1);
  public final static native long new_FunctionSetType__SWIG_0();
  public final static native long new_FunctionSetType__SWIG_1(long jarg1, FunctionSetType jarg1_);
  public final static native long FunctionSetType_capacity(long jarg1, FunctionSetType jarg1_);
  public final static native void FunctionSetType_reserve(long jarg1, FunctionSetType jarg1_, long jarg2);
  public final static native boolean FunctionSetType_isEmpty(long jarg1, FunctionSetType jarg1_);
  public final static native void FunctionSetType_clear(long jarg1, FunctionSetType jarg1_);
  public final static native long new_FunctionSetType__SWIG_2(int jarg1, long jarg2);
  public final static native int FunctionSetType_doSize(long jarg1, FunctionSetType jarg1_);
  public final static native void FunctionSetType_doAdd__SWIG_0(long jarg1, FunctionSetType jarg1_, long jarg2);
  public final static native void FunctionSetType_doAdd__SWIG_1(long jarg1, FunctionSetType jarg1_, int jarg2, long jarg3);
  public final static native long FunctionSetType_doRemove(long jarg1, FunctionSetType jarg1_, int jarg2);
  public final static native long FunctionSetType_doGet(long jarg1, FunctionSetType jarg1_, int jarg2);
  public final static native long FunctionSetType_doSet(long jarg1, FunctionSetType jarg1_, int jarg2, long jarg3);
  public final static native void FunctionSetType_doRemoveRange(long jarg1, FunctionSetType jarg1_, int jarg2, int jarg3);
  public final static native void delete_FunctionSetType(long jarg1);
  public final static native long new_GlobalSetType__SWIG_0();
  public final static native long new_GlobalSetType__SWIG_1(long jarg1, GlobalSetType jarg1_);
  public final static native long GlobalSetType_capacity(long jarg1, GlobalSetType jarg1_);
  public final static native void GlobalSetType_reserve(long jarg1, GlobalSetType jarg1_, long jarg2);
  public final static native boolean GlobalSetType_isEmpty(long jarg1, GlobalSetType jarg1_);
  public final static native void GlobalSetType_clear(long jarg1, GlobalSetType jarg1_);
  public final static native long new_GlobalSetType__SWIG_2(int jarg1, long jarg2);
  public final static native int GlobalSetType_doSize(long jarg1, GlobalSetType jarg1_);
  public final static native void GlobalSetType_doAdd__SWIG_0(long jarg1, GlobalSetType jarg1_, long jarg2);
  public final static native void GlobalSetType_doAdd__SWIG_1(long jarg1, GlobalSetType jarg1_, int jarg2, long jarg3);
  public final static native long GlobalSetType_doRemove(long jarg1, GlobalSetType jarg1_, int jarg2);
  public final static native long GlobalSetType_doGet(long jarg1, GlobalSetType jarg1_, int jarg2);
  public final static native long GlobalSetType_doSet(long jarg1, GlobalSetType jarg1_, int jarg2, long jarg3);
  public final static native void GlobalSetType_doRemoveRange(long jarg1, GlobalSetType jarg1_, int jarg2, int jarg3);
  public final static native void delete_GlobalSetType(long jarg1);
  public final static native long new_AliasSetType__SWIG_0();
  public final static native long new_AliasSetType__SWIG_1(long jarg1, AliasSetType jarg1_);
  public final static native long AliasSetType_capacity(long jarg1, AliasSetType jarg1_);
  public final static native void AliasSetType_reserve(long jarg1, AliasSetType jarg1_, long jarg2);
  public final static native boolean AliasSetType_isEmpty(long jarg1, AliasSetType jarg1_);
  public final static native void AliasSetType_clear(long jarg1, AliasSetType jarg1_);
  public final static native long new_AliasSetType__SWIG_2(int jarg1, long jarg2);
  public final static native int AliasSetType_doSize(long jarg1, AliasSetType jarg1_);
  public final static native void AliasSetType_doAdd__SWIG_0(long jarg1, AliasSetType jarg1_, long jarg2);
  public final static native void AliasSetType_doAdd__SWIG_1(long jarg1, AliasSetType jarg1_, int jarg2, long jarg3);
  public final static native long AliasSetType_doRemove(long jarg1, AliasSetType jarg1_, int jarg2);
  public final static native long AliasSetType_doGet(long jarg1, AliasSetType jarg1_, int jarg2);
  public final static native long AliasSetType_doSet(long jarg1, AliasSetType jarg1_, int jarg2, long jarg3);
  public final static native void AliasSetType_doRemoveRange(long jarg1, AliasSetType jarg1_, int jarg2, int jarg3);
  public final static native void delete_AliasSetType(long jarg1);
  public final static native long new_FunDeclToDefMapTy__SWIG_0();
  public final static native long new_FunDeclToDefMapTy__SWIG_1(long jarg1, FunDeclToDefMapTy jarg1_);
  public final static native long FunDeclToDefMapTy_Iterator_getNextUnchecked(long jarg1);
  public final static native boolean FunDeclToDefMapTy_Iterator_isNot(long jarg1, long jarg2);
  public final static native long FunDeclToDefMapTy_Iterator_getKey(long jarg1);
  public final static native long FunDeclToDefMapTy_Iterator_getValue(long jarg1);
  public final static native void FunDeclToDefMapTy_Iterator_setValue(long jarg1, long jarg2);
  public final static native void delete_FunDeclToDefMapTy_Iterator(long jarg1);
  public final static native boolean FunDeclToDefMapTy_isEmpty(long jarg1, FunDeclToDefMapTy jarg1_);
  public final static native void FunDeclToDefMapTy_clear(long jarg1, FunDeclToDefMapTy jarg1_);
  public final static native long FunDeclToDefMapTy_find(long jarg1, FunDeclToDefMapTy jarg1_, long jarg2);
  public final static native long FunDeclToDefMapTy_begin(long jarg1, FunDeclToDefMapTy jarg1_);
  public final static native long FunDeclToDefMapTy_end(long jarg1, FunDeclToDefMapTy jarg1_);
  public final static native int FunDeclToDefMapTy_sizeImpl(long jarg1, FunDeclToDefMapTy jarg1_);
  public final static native boolean FunDeclToDefMapTy_containsImpl(long jarg1, FunDeclToDefMapTy jarg1_, long jarg2);
  public final static native void FunDeclToDefMapTy_putUnchecked(long jarg1, FunDeclToDefMapTy jarg1_, long jarg2, long jarg3);
  public final static native void FunDeclToDefMapTy_removeUnchecked(long jarg1, FunDeclToDefMapTy jarg1_, long jarg2);
  public final static native void delete_FunDeclToDefMapTy(long jarg1);
  public final static native long new_FunDefToDeclsMapTy__SWIG_0();
  public final static native long new_FunDefToDeclsMapTy__SWIG_1(long jarg1, FunDefToDeclsMapTy jarg1_);
  public final static native long FunDefToDeclsMapTy_Iterator_getNextUnchecked(long jarg1);
  public final static native boolean FunDefToDeclsMapTy_Iterator_isNot(long jarg1, long jarg2);
  public final static native long FunDefToDeclsMapTy_Iterator_getKey(long jarg1);
  public final static native long FunDefToDeclsMapTy_Iterator_getValue(long jarg1);
  public final static native void FunDefToDeclsMapTy_Iterator_setValue(long jarg1, long jarg2);
  public final static native void delete_FunDefToDeclsMapTy_Iterator(long jarg1);
  public final static native boolean FunDefToDeclsMapTy_isEmpty(long jarg1, FunDefToDeclsMapTy jarg1_);
  public final static native void FunDefToDeclsMapTy_clear(long jarg1, FunDefToDeclsMapTy jarg1_);
  public final static native long FunDefToDeclsMapTy_find(long jarg1, FunDefToDeclsMapTy jarg1_, long jarg2);
  public final static native long FunDefToDeclsMapTy_begin(long jarg1, FunDefToDeclsMapTy jarg1_);
  public final static native long FunDefToDeclsMapTy_end(long jarg1, FunDefToDeclsMapTy jarg1_);
  public final static native int FunDefToDeclsMapTy_sizeImpl(long jarg1, FunDefToDeclsMapTy jarg1_);
  public final static native boolean FunDefToDeclsMapTy_containsImpl(long jarg1, FunDefToDeclsMapTy jarg1_, long jarg2);
  public final static native void FunDefToDeclsMapTy_putUnchecked(long jarg1, FunDefToDeclsMapTy jarg1_, long jarg2, long jarg3);
  public final static native void FunDefToDeclsMapTy_removeUnchecked(long jarg1, FunDefToDeclsMapTy jarg1_, long jarg2);
  public final static native void delete_FunDefToDeclsMapTy(long jarg1);
  public final static native long new_GlobalDefToRepMapTy__SWIG_0();
  public final static native long new_GlobalDefToRepMapTy__SWIG_1(long jarg1, GlobalDefToRepMapTy jarg1_);
  public final static native long GlobalDefToRepMapTy_Iterator_getNextUnchecked(long jarg1);
  public final static native boolean GlobalDefToRepMapTy_Iterator_isNot(long jarg1, long jarg2);
  public final static native long GlobalDefToRepMapTy_Iterator_getKey(long jarg1);
  public final static native long GlobalDefToRepMapTy_Iterator_getValue(long jarg1);
  public final static native void GlobalDefToRepMapTy_Iterator_setValue(long jarg1, long jarg2);
  public final static native void delete_GlobalDefToRepMapTy_Iterator(long jarg1);
  public final static native boolean GlobalDefToRepMapTy_isEmpty(long jarg1, GlobalDefToRepMapTy jarg1_);
  public final static native void GlobalDefToRepMapTy_clear(long jarg1, GlobalDefToRepMapTy jarg1_);
  public final static native long GlobalDefToRepMapTy_find(long jarg1, GlobalDefToRepMapTy jarg1_, long jarg2);
  public final static native long GlobalDefToRepMapTy_begin(long jarg1, GlobalDefToRepMapTy jarg1_);
  public final static native long GlobalDefToRepMapTy_end(long jarg1, GlobalDefToRepMapTy jarg1_);
  public final static native int GlobalDefToRepMapTy_sizeImpl(long jarg1, GlobalDefToRepMapTy jarg1_);
  public final static native boolean GlobalDefToRepMapTy_containsImpl(long jarg1, GlobalDefToRepMapTy jarg1_, long jarg2);
  public final static native void GlobalDefToRepMapTy_putUnchecked(long jarg1, GlobalDefToRepMapTy jarg1_, long jarg2, long jarg3);
  public final static native void GlobalDefToRepMapTy_removeUnchecked(long jarg1, GlobalDefToRepMapTy jarg1_, long jarg2);
  public final static native void delete_GlobalDefToRepMapTy(long jarg1);
  public final static native long new_StringVector__SWIG_0();
  public final static native long new_StringVector__SWIG_1(long jarg1, StringVector jarg1_);
  public final static native long StringVector_capacity(long jarg1, StringVector jarg1_);
  public final static native void StringVector_reserve(long jarg1, StringVector jarg1_, long jarg2);
  public final static native boolean StringVector_isEmpty(long jarg1, StringVector jarg1_);
  public final static native void StringVector_clear(long jarg1, StringVector jarg1_);
  public final static native long new_StringVector__SWIG_2(int jarg1, String jarg2);
  public final static native int StringVector_doSize(long jarg1, StringVector jarg1_);
  public final static native void StringVector_doAdd__SWIG_0(long jarg1, StringVector jarg1_, String jarg2);
  public final static native void StringVector_doAdd__SWIG_1(long jarg1, StringVector jarg1_, int jarg2, String jarg3);
  public final static native String StringVector_doRemove(long jarg1, StringVector jarg1_, int jarg2);
  public final static native String StringVector_doGet(long jarg1, StringVector jarg1_, int jarg2);
  public final static native String StringVector_doSet(long jarg1, StringVector jarg1_, int jarg2, String jarg3);
  public final static native void StringVector_doRemoveRange(long jarg1, StringVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_StringVector(long jarg1);
  public final static native long new_BasicBlockVector__SWIG_0();
  public final static native long new_BasicBlockVector__SWIG_1(long jarg1, BasicBlockVector jarg1_);
  public final static native long BasicBlockVector_capacity(long jarg1, BasicBlockVector jarg1_);
  public final static native void BasicBlockVector_reserve(long jarg1, BasicBlockVector jarg1_, long jarg2);
  public final static native boolean BasicBlockVector_isEmpty(long jarg1, BasicBlockVector jarg1_);
  public final static native void BasicBlockVector_clear(long jarg1, BasicBlockVector jarg1_);
  public final static native long new_BasicBlockVector__SWIG_2(int jarg1, long jarg2);
  public final static native int BasicBlockVector_doSize(long jarg1, BasicBlockVector jarg1_);
  public final static native void BasicBlockVector_doAdd__SWIG_0(long jarg1, BasicBlockVector jarg1_, long jarg2);
  public final static native void BasicBlockVector_doAdd__SWIG_1(long jarg1, BasicBlockVector jarg1_, int jarg2, long jarg3);
  public final static native long BasicBlockVector_doRemove(long jarg1, BasicBlockVector jarg1_, int jarg2);
  public final static native long BasicBlockVector_doGet(long jarg1, BasicBlockVector jarg1_, int jarg2);
  public final static native long BasicBlockVector_doSet(long jarg1, BasicBlockVector jarg1_, int jarg2, long jarg3);
  public final static native void BasicBlockVector_doRemoveRange(long jarg1, BasicBlockVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_BasicBlockVector(long jarg1);
  public final static native long new_InstructionVector__SWIG_0();
  public final static native long new_InstructionVector__SWIG_1(long jarg1, InstructionVector jarg1_);
  public final static native long InstructionVector_capacity(long jarg1, InstructionVector jarg1_);
  public final static native void InstructionVector_reserve(long jarg1, InstructionVector jarg1_, long jarg2);
  public final static native boolean InstructionVector_isEmpty(long jarg1, InstructionVector jarg1_);
  public final static native void InstructionVector_clear(long jarg1, InstructionVector jarg1_);
  public final static native long new_InstructionVector__SWIG_2(int jarg1, long jarg2);
  public final static native int InstructionVector_doSize(long jarg1, InstructionVector jarg1_);
  public final static native void InstructionVector_doAdd__SWIG_0(long jarg1, InstructionVector jarg1_, long jarg2);
  public final static native void InstructionVector_doAdd__SWIG_1(long jarg1, InstructionVector jarg1_, int jarg2, long jarg3);
  public final static native long InstructionVector_doRemove(long jarg1, InstructionVector jarg1_, int jarg2);
  public final static native long InstructionVector_doGet(long jarg1, InstructionVector jarg1_, int jarg2);
  public final static native long InstructionVector_doSet(long jarg1, InstructionVector jarg1_, int jarg2, long jarg3);
  public final static native void InstructionVector_doRemoveRange(long jarg1, InstructionVector jarg1_, int jarg2, int jarg3);
  public final static native void delete_InstructionVector(long jarg1);
  public final static native String DGENERAL_get();
  public final static native String DPAGBuild_get();
  public final static native String DMemModel_get();
  public final static native String DMemModelCE_get();
  public final static native String DCOMModel_get();
  public final static native String DDDA_get();
  public final static native String DDumpPT_get();
  public final static native String DRefinePT_get();
  public final static native String DCache_get();
  public final static native String DWPA_get();
  public final static native String DMSSA_get();
  public final static native String DInstrument_get();
  public final static native String DAndersen_get();
  public final static native String DSaber_get();
  public final static native String DMTA_get();
  public final static native String DCHA_get();
  public final static native int TIMEINTERVAL_get();
  public final static native void PTAStat_TotalAnalysisTime_set(String jarg1);
  public final static native String PTAStat_TotalAnalysisTime_get();
  public final static native void PTAStat_SCCDetectionTime_set(String jarg1);
  public final static native String PTAStat_SCCDetectionTime_get();
  public final static native void PTAStat_SCCMergeTime_set(String jarg1);
  public final static native String PTAStat_SCCMergeTime_get();
  public final static native void PTAStat_ProcessLoadStoreTime_set(String jarg1);
  public final static native String PTAStat_ProcessLoadStoreTime_get();
  public final static native void PTAStat_ProcessCopyGepTime_set(String jarg1);
  public final static native String PTAStat_ProcessCopyGepTime_get();
  public final static native void PTAStat_UpdateCallGraphTime_set(String jarg1);
  public final static native String PTAStat_UpdateCallGraphTime_get();
  public final static native void PTAStat_TotalNumOfPointers_set(String jarg1);
  public final static native String PTAStat_TotalNumOfPointers_get();
  public final static native void PTAStat_TotalNumOfObjects_set(String jarg1);
  public final static native String PTAStat_TotalNumOfObjects_get();
  public final static native void PTAStat_TotalNumOfFieldObjects_set(String jarg1);
  public final static native String PTAStat_TotalNumOfFieldObjects_get();
  public final static native void PTAStat_MaxStructSize_set(String jarg1);
  public final static native String PTAStat_MaxStructSize_get();
  public final static native void PTAStat_TotalNumOfEdges_set(String jarg1);
  public final static native String PTAStat_TotalNumOfEdges_get();
  public final static native void PTAStat_NumOfAddrs_set(String jarg1);
  public final static native String PTAStat_NumOfAddrs_get();
  public final static native void PTAStat_NumOfLoads_set(String jarg1);
  public final static native String PTAStat_NumOfLoads_get();
  public final static native void PTAStat_NumOfStores_set(String jarg1);
  public final static native String PTAStat_NumOfStores_get();
  public final static native void PTAStat_NumOfCopys_set(String jarg1);
  public final static native String PTAStat_NumOfCopys_get();
  public final static native void PTAStat_NumOfGeps_set(String jarg1);
  public final static native String PTAStat_NumOfGeps_get();
  public final static native void PTAStat_NumOfCalls_set(String jarg1);
  public final static native String PTAStat_NumOfCalls_get();
  public final static native void PTAStat_NumOfReturns_set(String jarg1);
  public final static native String PTAStat_NumOfReturns_get();
  public final static native void PTAStat_NumOfProcessedAddrs_set(String jarg1);
  public final static native String PTAStat_NumOfProcessedAddrs_get();
  public final static native void PTAStat_NumOfProcessedLoads_set(String jarg1);
  public final static native String PTAStat_NumOfProcessedLoads_get();
  public final static native void PTAStat_NumOfProcessedStores_set(String jarg1);
  public final static native String PTAStat_NumOfProcessedStores_get();
  public final static native void PTAStat_NumOfProcessedCopys_set(String jarg1);
  public final static native String PTAStat_NumOfProcessedCopys_get();
  public final static native void PTAStat_NumOfProcessedGeps_set(String jarg1);
  public final static native String PTAStat_NumOfProcessedGeps_get();
  public final static native void PTAStat_NumOfSfr_set(String jarg1);
  public final static native String PTAStat_NumOfSfr_get();
  public final static native void PTAStat_NumOfFieldExpand_set(String jarg1);
  public final static native String PTAStat_NumOfFieldExpand_get();
  public final static native void PTAStat_NumOfFunctionObjs_set(String jarg1);
  public final static native String PTAStat_NumOfFunctionObjs_get();
  public final static native void PTAStat_NumOfGlobalObjs_set(String jarg1);
  public final static native String PTAStat_NumOfGlobalObjs_get();
  public final static native void PTAStat_NumOfHeapObjs_set(String jarg1);
  public final static native String PTAStat_NumOfHeapObjs_get();
  public final static native void PTAStat_NumOfStackObjs_set(String jarg1);
  public final static native String PTAStat_NumOfStackObjs_get();
  public final static native void PTAStat_NumOfObjsHasVarStruct_set(String jarg1);
  public final static native String PTAStat_NumOfObjsHasVarStruct_get();
  public final static native void PTAStat_NumOfObjsHasVarArray_set(String jarg1);
  public final static native String PTAStat_NumOfObjsHasVarArray_get();
  public final static native void PTAStat_NumOfObjsHasConstStruct_set(String jarg1);
  public final static native String PTAStat_NumOfObjsHasConstStruct_get();
  public final static native void PTAStat_NumOfObjsHasConstArray_set(String jarg1);
  public final static native String PTAStat_NumOfObjsHasConstArray_get();
  public final static native void PTAStat_NumOfNonPtrObjs_set(String jarg1);
  public final static native String PTAStat_NumOfNonPtrObjs_get();
  public final static native void PTAStat_NumOfConstantObjs_set(String jarg1);
  public final static native String PTAStat_NumOfConstantObjs_get();
  public final static native void PTAStat_NumberOfFieldInsensitiveObj_set(String jarg1);
  public final static native String PTAStat_NumberOfFieldInsensitiveObj_get();
  public final static native void PTAStat_NumberOfFieldSensitiveObj_set(String jarg1);
  public final static native String PTAStat_NumberOfFieldSensitiveObj_get();
  public final static native void PTAStat_NumOfPointers_set(String jarg1);
  public final static native String PTAStat_NumOfPointers_get();
  public final static native void PTAStat_NumOfGepFieldPointers_set(String jarg1);
  public final static native String PTAStat_NumOfGepFieldPointers_get();
  public final static native void PTAStat_NumOfMemObjects_set(String jarg1);
  public final static native String PTAStat_NumOfMemObjects_get();
  public final static native void PTAStat_NumOfGepFieldObjects_set(String jarg1);
  public final static native String PTAStat_NumOfGepFieldObjects_get();
  public final static native void PTAStat_AveragePointsToSetSize_set(String jarg1);
  public final static native String PTAStat_AveragePointsToSetSize_get();
  public final static native void PTAStat_AverageTopLevPointsToSetSize_set(String jarg1);
  public final static native String PTAStat_AverageTopLevPointsToSetSize_get();
  public final static native void PTAStat_MaxPointsToSetSize_set(String jarg1);
  public final static native String PTAStat_MaxPointsToSetSize_get();
  public final static native void PTAStat_NumOfIterations_set(String jarg1);
  public final static native String PTAStat_NumOfIterations_get();
  public final static native void PTAStat_NumOfIndirectCallSites_set(String jarg1);
  public final static native String PTAStat_NumOfIndirectCallSites_get();
  public final static native void PTAStat_NumOfIndirectEdgeSolved_set(String jarg1);
  public final static native String PTAStat_NumOfIndirectEdgeSolved_get();
  public final static native void PTAStat_NumOfSCCDetection_set(String jarg1);
  public final static native String PTAStat_NumOfSCCDetection_get();
  public final static native void PTAStat_NumOfCycles_set(String jarg1);
  public final static native String PTAStat_NumOfCycles_get();
  public final static native void PTAStat_NumOfPWCCycles_set(String jarg1);
  public final static native String PTAStat_NumOfPWCCycles_get();
  public final static native void PTAStat_NumOfNodesInCycles_set(String jarg1);
  public final static native String PTAStat_NumOfNodesInCycles_get();
  public final static native void PTAStat_MaxNumOfNodesInSCC_set(String jarg1);
  public final static native String PTAStat_MaxNumOfNodesInSCC_get();
  public final static native void PTAStat_NumOfNullPointer_set(String jarg1);
  public final static native String PTAStat_NumOfNullPointer_get();
  public final static native long new_PTAStat(long jarg1, PointerAnalysis jarg1_);
  public final static native void delete_PTAStat(long jarg1);
  public final static native void PTAStat_startClk(long jarg1, PTAStat jarg1_);
  public final static native void PTAStat_endClk(long jarg1, PTAStat jarg1_);
  public final static native double PTAStat_getClk();
  public final static native void PTAStat_generalNumMap_set(long jarg1, PTAStat jarg1_, long jarg2, NUMStatMap jarg2_);
  public final static native long PTAStat_generalNumMap_get(long jarg1, PTAStat jarg1_);
  public final static native void PTAStat_PTNumStatMap_set(long jarg1, PTAStat jarg1_, long jarg2, NUMStatMap jarg2_);
  public final static native long PTAStat_PTNumStatMap_get(long jarg1, PTAStat jarg1_);
  public final static native void PTAStat_timeStatMap_set(long jarg1, PTAStat jarg1_, long jarg2, TIMEStatMap jarg2_);
  public final static native long PTAStat_timeStatMap_get(long jarg1, PTAStat jarg1_);
  public final static native void PTAStat_localVarInRecursion_set(long jarg1, PTAStat jarg1_, long jarg2);
  public final static native long PTAStat_localVarInRecursion_get(long jarg1, PTAStat jarg1_);
  public final static native void PTAStat_startTime_set(long jarg1, PTAStat jarg1_, double jarg2);
  public final static native double PTAStat_startTime_get(long jarg1, PTAStat jarg1_);
  public final static native void PTAStat_endTime_set(long jarg1, PTAStat jarg1_, double jarg2);
  public final static native double PTAStat_endTime_get(long jarg1, PTAStat jarg1_);
  public final static native void PTAStat_performStat(long jarg1, PTAStat jarg1_);
  public final static native void PTAStat_printStat__SWIG_0(long jarg1, PTAStat jarg1_, String jarg2);
  public final static native void PTAStat_printStat__SWIG_1(long jarg1, PTAStat jarg1_);
  public final static native void PTAStat_performStatPerQuery(long jarg1, PTAStat jarg1_, long jarg2);
  public final static native void PTAStat_printStatPerQuery(long jarg1, PTAStat jarg1_, long jarg2, long jarg3);
  public final static native void PTAStat_callgraphStat(long jarg1, PTAStat jarg1_);
  public final static native long outs();
  public final static native long errs();
  public final static native boolean isIntrinsicDbgFun(long jarg1);
  public final static native boolean isInstrinsicDbgInst(long jarg1);
  public final static native boolean isAnAllocationWraper(long jarg1);
  public final static native boolean isCallSite(long jarg1);
  public final static native boolean isNonInstricCallSite(long jarg1);
  public final static native boolean isReturn(long jarg1);
  public final static native long getLLVMFunction(long jarg1);
  public final static native long getLLVMCallSite(long jarg1);
  public final static native long getDefFunForMultipleModule(long jarg1);
  public final static native long getCallee__SWIG_0(long jarg1);
  public final static native long getCallee__SWIG_1(long jarg1);
  public final static native boolean isExtCall__SWIG_0(long jarg1);
  public final static native boolean isExtCall__SWIG_1(long jarg1);
  public final static native boolean isExtCall__SWIG_2(long jarg1);
  public final static native boolean isHeapAllocExtFunViaRet(long jarg1);
  public final static native boolean isHeapAllocExtFunViaArg(long jarg1);
  public final static native boolean isHeapAllocExtCallViaRet__SWIG_0(long jarg1);
  public final static native boolean isHeapAllocExtCallViaRet__SWIG_1(long jarg1);
  public final static native boolean isHeapAllocExtCallViaArg__SWIG_0(long jarg1);
  public final static native boolean isHeapAllocExtCallViaArg__SWIG_1(long jarg1);
  public final static native boolean isHeapAllocExtCall__SWIG_0(long jarg1);
  public final static native boolean isHeapAllocExtCall__SWIG_1(long jarg1);
  public final static native int getHeapAllocHoldingArgPosition__SWIG_0(long jarg1);
  public final static native int getHeapAllocHoldingArgPosition__SWIG_1(long jarg1);
  public final static native int getHeapAllocHoldingArgPosition__SWIG_2(long jarg1);
  public final static native boolean isReallocExtFun(long jarg1);
  public final static native boolean isReallocExtCall__SWIG_0(long jarg1);
  public final static native boolean isReallocExtCall__SWIG_1(long jarg1);
  public final static native boolean isDeallocExtFun(long jarg1);
  public final static native boolean isDeallocExtCall__SWIG_0(long jarg1);
  public final static native boolean isDeallocExtCall__SWIG_1(long jarg1);
  public final static native boolean isStaticExtFun(long jarg1);
  public final static native boolean isStaticExtCall__SWIG_0(long jarg1);
  public final static native boolean isStaticExtCall__SWIG_1(long jarg1);
  public final static native boolean isHeapAllocOrStaticExtCall__SWIG_0(long jarg1);
  public final static native boolean isHeapAllocOrStaticExtCall__SWIG_1(long jarg1);
  public final static native long extCallTy(long jarg1);
  public final static native long getRefTypeOfHeapAllocOrStatic__SWIG_0(long jarg1);
  public final static native long getRefTypeOfHeapAllocOrStatic__SWIG_1(long jarg1);
  public final static native boolean isThreadForkCall__SWIG_0(long jarg1);
  public final static native boolean isThreadForkCall__SWIG_1(long jarg1);
  public final static native boolean isHareParForCall__SWIG_0(long jarg1);
  public final static native boolean isHareParForCall__SWIG_1(long jarg1);
  public final static native boolean isThreadJoinCall__SWIG_0(long jarg1);
  public final static native boolean isThreadJoinCall__SWIG_1(long jarg1);
  public final static native boolean isThreadExitCall__SWIG_0(long jarg1);
  public final static native boolean isThreadExitCall__SWIG_1(long jarg1);
  public final static native boolean isLockAquireCall__SWIG_0(long jarg1);
  public final static native boolean isLockAquireCall__SWIG_1(long jarg1);
  public final static native boolean isLockReleaseCall__SWIG_0(long jarg1);
  public final static native boolean isLockReleaseCall__SWIG_1(long jarg1);
  public final static native boolean isBarrierWaitCall__SWIG_0(long jarg1);
  public final static native boolean isBarrierWaitCall__SWIG_1(long jarg1);
  public final static native long getForkedFun__SWIG_0(long jarg1);
  public final static native long getForkedFun__SWIG_1(long jarg1);
  public final static native long getActualParmAtForkSite__SWIG_0(long jarg1);
  public final static native long getActualParmAtForkSite__SWIG_1(long jarg1);
  public final static native long getTaskFuncAtHareParForSite__SWIG_0(long jarg1);
  public final static native long getTaskFuncAtHareParForSite__SWIG_1(long jarg1);
  public final static native long getTaskDataAtHareParForSite__SWIG_0(long jarg1);
  public final static native long getTaskDataAtHareParForSite__SWIG_1(long jarg1);
  public final static native boolean isObject(long jarg1);
  public final static native boolean isDeadFunction(long jarg1);
  public final static native boolean ArgInDeadFunction(long jarg1);
  public final static native boolean isProgEntryFunction(long jarg1);
  public final static native long getProgEntryFunction(long jarg1, SVFModule jarg1_);
  public final static native boolean ArgInProgEntryFunction(long jarg1);
  public final static native boolean isPtrInDeadFunction(long jarg1);
  public final static native boolean isProgExitFunction(long jarg1);
  public final static native boolean isProgExitCall__SWIG_0(long jarg1);
  public final static native boolean isProgExitCall__SWIG_1(long jarg1);
  public final static native boolean isNoCallerFunction(long jarg1);
  public final static native boolean ArgInNoCallerFunction(long jarg1);
  public final static native boolean functionDoesNotRet(long jarg1);
  public final static native void getFunReachableBBs(long jarg1, long jarg2, long jarg3, BasicBlockVector jarg3_);
  public final static native long getFunExitBB(long jarg1);
  public final static native long stripConstantCasts(long jarg1);
  public final static native long stripAllCasts(long jarg1);
  public final static native long getTypeOfHeapAlloc(long jarg1);
  public final static native long isGepConstantExpr(long jarg1);
  public final static native long isInt2PtrConstantExpr(long jarg1);
  public final static native long isPtr2IntConstantExpr(long jarg1);
  public final static native long isCastConstantExpr(long jarg1);
  public final static native long isSelectConstantExpr(long jarg1);
  public final static native long isTruncConstantExpr(long jarg1);
  public final static native long isCmpConstantExpr(long jarg1);
  public final static native void getNextInsts(long jarg1, long jarg2, InstructionVector jarg2_);
  public final static native void getPrevInsts(long jarg1, long jarg2, InstructionVector jarg2_);
  public final static native long getBBSuccessorPos(long jarg1, long jarg2);
  public final static native long getBBSuccessorNum(long jarg1);
  public final static native long getBBPredecessorPos(long jarg1, long jarg2);
  public final static native long getBBPredecessorNum(long jarg1);
  public final static native String getSourceLoc(long jarg1);
  public final static native String getSourceLocOfFunction(long jarg1);
  public final static native void dumpSet__SWIG_0(long jarg1, long jarg2);
  public final static native void dumpSet__SWIG_1(long jarg1);
  public final static native void dumpPointsToSet(long jarg1, long jarg2);
  public final static native void dumpAliasSet(long jarg1, long jarg2);
  public final static native String sucMsg(String jarg1);
  public final static native void wrnMsg(String jarg1);
  public final static native String errMsg(String jarg1);
  public final static native String bugMsg1(String jarg1);
  public final static native String bugMsg2(String jarg1);
  public final static native String bugMsg3(String jarg1);
  public final static native String pasMsg(String jarg1);
  public final static native void reportMemoryUsageKB__SWIG_0(String jarg1, long jarg2);
  public final static native void reportMemoryUsageKB__SWIG_1(String jarg1);
  public final static native boolean getMemoryUsageKB(long jarg1, long jarg2);
  public final static native void increaseStackSize();
  public final static native boolean isIRFile(String jarg1);
  public final static native void processArguments(int jarg1, long jarg2, long jarg3, long jarg4, long jarg5, StringVector jarg5_);
  public final static native boolean cmpPts(long jarg1, long jarg2);
  public final static native long new_LLVMModuleSetMNV(long jarg1, StringVector jarg1_);
  public final static native long new_LLVMModuleSetMOD(long jarg1);
  public final static native long new_LLVMModuleSetAMOD(long jarg1);
  public final static native long new_LLVMModuleSet();
  public final static native void LLVMModuleSet_build(long jarg1, LLVMModuleSet jarg1_, long jarg2, StringVector jarg2_);
  public final static native long LLVMModuleSet_getModuleNum(long jarg1, LLVMModuleSet jarg1_);
  public final static native long LLVMModuleSet_getModule(long jarg1, LLVMModuleSet jarg1_, long jarg2);
  public final static native long LLVMModuleSet_getModuleRef(long jarg1, LLVMModuleSet jarg1_, long jarg2);
  public final static native void LLVMModuleSet_dumpModulesToFile(long jarg1, LLVMModuleSet jarg1_, String jarg2);
  public final static native boolean LLVMModuleSet_hasDefinition(long jarg1, LLVMModuleSet jarg1_, long jarg2);
  public final static native long LLVMModuleSet_getDefinition(long jarg1, LLVMModuleSet jarg1_, long jarg2);
  public final static native boolean LLVMModuleSet_hasDeclaration(long jarg1, LLVMModuleSet jarg1_, long jarg2);
  public final static native long LLVMModuleSet_getDeclaration(long jarg1, LLVMModuleSet jarg1_, long jarg2);
  public final static native boolean LLVMModuleSet_hasGlobalRep(long jarg1, LLVMModuleSet jarg1_, long jarg2);
  public final static native long LLVMModuleSet_getGlobalRep(long jarg1, LLVMModuleSet jarg1_, long jarg2);
  public final static native long LLVMModuleSet_begin(long jarg1, LLVMModuleSet jarg1_);
  public final static native long LLVMModuleSet_begin_const(long jarg1, LLVMModuleSet jarg1_);
  public final static native long LLVMModuleSet_end(long jarg1, LLVMModuleSet jarg1_);
  public final static native long LLVMModuleSet_end_const(long jarg1, LLVMModuleSet jarg1_);
  public final static native long LLVMModuleSet_global_begin(long jarg1, LLVMModuleSet jarg1_);
  public final static native long LLVMModuleSet_global_begin_const(long jarg1, LLVMModuleSet jarg1_);
  public final static native long LLVMModuleSet_global_end(long jarg1, LLVMModuleSet jarg1_);
  public final static native long LLVMModuleSet_global_end_const(long jarg1, LLVMModuleSet jarg1_);
  public final static native long LLVMModuleSet_alias_begin(long jarg1, LLVMModuleSet jarg1_);
  public final static native long LLVMModuleSet_alias_begin_const(long jarg1, LLVMModuleSet jarg1_);
  public final static native long LLVMModuleSet_alias_end(long jarg1, LLVMModuleSet jarg1_);
  public final static native long LLVMModuleSet_alias_end_const(long jarg1, LLVMModuleSet jarg1_);
  public final static native void delete_LLVMModuleSet(long jarg1);
  public final static native long new_SVFModuleMNV(long jarg1, StringVector jarg1_);
  public final static native long new_SVFModulePointer(long jarg1);
  public final static native long new_SVFModuleAddr(long jarg1);
  public final static native long new_SVFModule();
  public final static native long SVFModule_getLLVMModuleSet();
  public final static native void SVFModule_setPagFromTXT(String jarg1);
  public final static native String SVFModule_pagFileName();
  public final static native boolean SVFModule_pagReadFromTXT();
  public final static native void SVFModule_releaseLLVMModuleSet();
  public final static native boolean SVFModule_empty(long jarg1, SVFModule jarg1_);
  public final static native long SVFModule_getModuleNum(long jarg1, SVFModule jarg1_);
  public final static native long SVFModule_getModule(long jarg1, SVFModule jarg1_, long jarg2);
  public final static native long SVFModule_getModuleRef(long jarg1, SVFModule jarg1_, long jarg2);
  public final static native void SVFModule_dumpModulesToFile(long jarg1, SVFModule jarg1_, String jarg2);
  public final static native boolean SVFModule_hasDefinition(long jarg1, SVFModule jarg1_, long jarg2);
  public final static native long SVFModule_getDefinition(long jarg1, SVFModule jarg1_, long jarg2);
  public final static native boolean SVFModule_hasDeclaration(long jarg1, SVFModule jarg1_, long jarg2);
  public final static native long SVFModule_getDeclaration(long jarg1, SVFModule jarg1_, long jarg2);
  public final static native boolean SVFModule_hasGlobalRep(long jarg1, SVFModule jarg1_, long jarg2);
  public final static native long SVFModule_getGlobalRep(long jarg1, SVFModule jarg1_, long jarg2);
  public final static native long SVFModule_begin(long jarg1, SVFModule jarg1_);
  public final static native long SVFModule_begin_const(long jarg1, SVFModule jarg1_);
  public final static native long SVFModule_end(long jarg1, SVFModule jarg1_);
  public final static native long SVFModule_end_const(long jarg1, SVFModule jarg1_);
  public final static native long SVFModule_getMainLLVMModule(long jarg1, SVFModule jarg1_);
  public final static native String SVFModule_getModuleIdentifier(long jarg1, SVFModule jarg1_);
  public final static native long SVFModule_getContext(long jarg1, SVFModule jarg1_);
  public final static native long SVFModule_getFunction(long jarg1, SVFModule jarg1_, long jarg2);
  public final static native long SVFModule_global_begin(long jarg1, SVFModule jarg1_);
  public final static native long SVFModule_global_begin_const(long jarg1, SVFModule jarg1_);
  public final static native long SVFModule_global_end(long jarg1, SVFModule jarg1_);
  public final static native long SVFModule_global_end_const(long jarg1, SVFModule jarg1_);
  public final static native long SVFModule_alias_begin(long jarg1, SVFModule jarg1_);
  public final static native long SVFModule_alias_begin_const(long jarg1, SVFModule jarg1_);
  public final static native long SVFModule_alias_end(long jarg1, SVFModule jarg1_);
  public final static native long SVFModule_alias_end_const(long jarg1, SVFModule jarg1_);
  public final static native void delete_SVFModule(long jarg1);
  public final static native int PointerAnalysis_getNumOfResolvedIndCallEdge(long jarg1, PointerAnalysis jarg1_);
  public final static native long PointerAnalysis_getPTACallGraph(long jarg1, PointerAnalysis jarg1_);
  public final static native long PointerAnalysis_getCallGraphSCC(long jarg1, PointerAnalysis jarg1_);
  public final static native int PointerAnalysis_getAnalysisTy(long jarg1, PointerAnalysis jarg1_);
  public final static native long PointerAnalysis_getPAG(long jarg1, PointerAnalysis jarg1_);
  public final static native void PointerAnalysis_setPAG(long jarg1);
  public final static native long PointerAnalysis_getStat(long jarg1, PointerAnalysis jarg1_);
  public final static native long PointerAnalysis_getModule(long jarg1, PointerAnalysis jarg1_);
  public final static native long PointerAnalysis_getAllValidPtrs(long jarg1, PointerAnalysis jarg1_);
  public final static native void delete_PointerAnalysis(long jarg1);
  public final static native void PointerAnalysis_initialize(long jarg1, PointerAnalysis jarg1_, long jarg2, SVFModule jarg2_);
  public final static native void PointerAnalysis_finalize(long jarg1, PointerAnalysis jarg1_);
  public final static native void PointerAnalysis_analyze(long jarg1, PointerAnalysis jarg1_, long jarg2, SVFModule jarg2_);
  public final static native void PointerAnalysis_computeDDAPts(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native long PointerAnalysis_alias__SWIG_0(long jarg1, PointerAnalysis jarg1_, long jarg2, long jarg3);
  public final static native long PointerAnalysis_alias__SWIG_1(long jarg1, PointerAnalysis jarg1_, long jarg2, long jarg3);
  public final static native long PointerAnalysis_alias__SWIG_2(long jarg1, PointerAnalysis jarg1_, long jarg2, long jarg3);
  public final static native void PointerAnalysis_dumpStat(long jarg1, PointerAnalysis jarg1_);
  public final static native boolean PointerAnalysis_containBlackHoleNode(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native boolean PointerAnalysis_containConstantNode(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native boolean PointerAnalysis_isBlkObjOrConstantObj(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native boolean PointerAnalysis_isNonPointerObj(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native boolean PointerAnalysis_isHeapMemObj(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native boolean PointerAnalysis_isArrayMemObj(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native boolean PointerAnalysis_isFIObjNode(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native long PointerAnalysis_getBaseObjNode(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native long PointerAnalysis_getFIObjNode(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native long PointerAnalysis_getGepObjNode(long jarg1, PointerAnalysis jarg1_, long jarg2, long jarg3);
  public final static native long PointerAnalysis_getAllFieldsObjNode(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native void PointerAnalysis_setObjFieldInsensitive(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native boolean PointerAnalysis_isFieldInsensitive(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native boolean PointerAnalysis_printStat(long jarg1, PointerAnalysis jarg1_);
  public final static native void PointerAnalysis_disablePrintStat(long jarg1, PointerAnalysis jarg1_);
  public final static native long PointerAnalysis_getIndCallMap(long jarg1, PointerAnalysis jarg1_);
  public final static native boolean PointerAnalysis_hasIndCSCallees(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native long PointerAnalysis_getIndCSCallees__SWIG_0(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native long PointerAnalysis_getIndCSCallees__SWIG_1(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native void PointerAnalysis_resolveIndCalls__SWIG_0(long jarg1, PointerAnalysis jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void PointerAnalysis_resolveIndCalls__SWIG_1(long jarg1, PointerAnalysis jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native boolean PointerAnalysis_matchArgs(long jarg1, PointerAnalysis jarg1_, long jarg2, long jarg3);
  public final static native void PointerAnalysis_callGraphSCCDetection(long jarg1, PointerAnalysis jarg1_);
  public final static native long PointerAnalysis_getCallGraphSCCRepNode(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native boolean PointerAnalysis_inSameCallGraphSCC(long jarg1, PointerAnalysis jarg1_, long jarg2, long jarg3);
  public final static native boolean PointerAnalysis_isInRecursion(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native boolean PointerAnalysis_isLocalVarInRecursiveFun(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native String PointerAnalysis_PTAName(long jarg1, PointerAnalysis jarg1_);
  public final static native long PointerAnalysis_getPts(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native long PointerAnalysis_getRevPts(long jarg1, PointerAnalysis jarg1_, long jarg2);
  public final static native void PointerAnalysis_clearPts(long jarg1, PointerAnalysis jarg1_);
  public final static native void PointerAnalysis_printIndCSTargets__SWIG_0(long jarg1, PointerAnalysis jarg1_, long jarg2, long jarg3, FunctionSet jarg3_);
  public final static native void PointerAnalysis_dumpTopLevelPtsTo(long jarg1, PointerAnalysis jarg1_);
  public final static native void PointerAnalysis_dumpAllPts(long jarg1, PointerAnalysis jarg1_);
  public final static native void PointerAnalysis_dumpCPts(long jarg1, PointerAnalysis jarg1_);
  public final static native void PointerAnalysis_dumpPts(long jarg1, PointerAnalysis jarg1_, long jarg2, long jarg3);
  public final static native void PointerAnalysis_printIndCSTargets__SWIG_1(long jarg1, PointerAnalysis jarg1_);
  public final static native void PointerAnalysis_dumpAllTypes(long jarg1, PointerAnalysis jarg1_);
  public final static native long PointerAnalysis_getCHGraph(long jarg1, PointerAnalysis jarg1_);
  public final static native void PointerAnalysis_getVFnsFromCHA(long jarg1, PointerAnalysis jarg1_, long jarg2, long jarg3, FunctionSet jarg3_);
  public final static native void PointerAnalysis_getVFnsFromPts(long jarg1, PointerAnalysis jarg1_, long jarg2, long jarg3, long jarg4, FunctionSet jarg4_);
  public final static native void PointerAnalysis_connectVCallToVFns(long jarg1, PointerAnalysis jarg1_, long jarg2, long jarg3, FunctionSet jarg3_, long jarg4);
  public final static native void PointerAnalysis_resolveCPPIndCalls(long jarg1, PointerAnalysis jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long PointerAnalysis_getTypeSystem(long jarg1, PointerAnalysis jarg1_);
  public final static native void delete_BVDataPTAImpl(long jarg1);
  public final static native void BVDataPTAImpl_destroy(long jarg1, BVDataPTAImpl jarg1_);
  public final static native long BVDataPTAImpl_getPts(long jarg1, BVDataPTAImpl jarg1_, long jarg2);
  public final static native long BVDataPTAImpl_getRevPts(long jarg1, BVDataPTAImpl jarg1_, long jarg2);
  public final static native void BVDataPTAImpl_expandFIObjs(long jarg1, BVDataPTAImpl jarg1_, long jarg2, long jarg3);
  public final static native void BVDataPTAImpl_writeToFile(long jarg1, BVDataPTAImpl jarg1_, String jarg2);
  public final static native boolean BVDataPTAImpl_readFromFile(long jarg1, BVDataPTAImpl jarg1_, String jarg2);
  public final static native long BVDataPTAImpl_alias__SWIG_0(long jarg1, BVDataPTAImpl jarg1_, long jarg2, long jarg3);
  public final static native long BVDataPTAImpl_alias__SWIG_1(long jarg1, BVDataPTAImpl jarg1_, long jarg2, long jarg3);
  public final static native long BVDataPTAImpl_alias__SWIG_2(long jarg1, BVDataPTAImpl jarg1_, long jarg2, long jarg3);
  public final static native long BVDataPTAImpl_alias__SWIG_3(long jarg1, BVDataPTAImpl jarg1_, long jarg2, long jarg3);
  public final static native void BVDataPTAImpl_dumpCPts(long jarg1, BVDataPTAImpl jarg1_);
  public final static native void BVDataPTAImpl_dumpTopLevelPtsTo(long jarg1, BVDataPTAImpl jarg1_);
  public final static native void BVDataPTAImpl_dumpAllPts(long jarg1, BVDataPTAImpl jarg1_);
  public final static native long new_DDAStat__SWIG_0(long jarg1);
  public final static native long new_DDAStat__SWIG_1(long jarg1);
  public final static native void DDAStat__NumOfDPM_set(long jarg1, DDAStat jarg1_, long jarg2);
  public final static native long DDAStat__NumOfDPM_get(long jarg1, DDAStat jarg1_);
  public final static native void DDAStat__NumOfStrongUpdates_set(long jarg1, DDAStat jarg1_, long jarg2);
  public final static native long DDAStat__NumOfStrongUpdates_get(long jarg1, DDAStat jarg1_);
  public final static native void DDAStat__NumOfMustAliases_set(long jarg1, DDAStat jarg1_, long jarg2);
  public final static native long DDAStat__NumOfMustAliases_get(long jarg1, DDAStat jarg1_);
  public final static native void DDAStat__NumOfInfeasiblePath_set(long jarg1, DDAStat jarg1_, long jarg2);
  public final static native long DDAStat__NumOfInfeasiblePath_get(long jarg1, DDAStat jarg1_);
  public final static native void DDAStat__NumOfStep_set(long jarg1, DDAStat jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger DDAStat__NumOfStep_get(long jarg1, DDAStat jarg1_);
  public final static native void DDAStat__NumOfStepInCycle_set(long jarg1, DDAStat jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger DDAStat__NumOfStepInCycle_get(long jarg1, DDAStat jarg1_);
  public final static native void DDAStat__AnaTimePerQuery_set(long jarg1, DDAStat jarg1_, double jarg2);
  public final static native double DDAStat__AnaTimePerQuery_get(long jarg1, DDAStat jarg1_);
  public final static native void DDAStat__AnaTimeCyclePerQuery_set(long jarg1, DDAStat jarg1_, double jarg2);
  public final static native double DDAStat__AnaTimeCyclePerQuery_get(long jarg1, DDAStat jarg1_);
  public final static native void DDAStat__TotalTimeOfQueries_set(long jarg1, DDAStat jarg1_, double jarg2);
  public final static native double DDAStat__TotalTimeOfQueries_get(long jarg1, DDAStat jarg1_);
  public final static native void DDAStat__TotalTimeOfBKCondition_set(long jarg1, DDAStat jarg1_, double jarg2);
  public final static native double DDAStat__TotalTimeOfBKCondition_get(long jarg1, DDAStat jarg1_);
  public final static native void DDAStat__StrongUpdateStores_set(long jarg1, DDAStat jarg1_, long jarg2);
  public final static native long DDAStat__StrongUpdateStores_get(long jarg1, DDAStat jarg1_);
  public final static native void DDAStat_performStatPerQuery(long jarg1, DDAStat jarg1_, long jarg2);
  public final static native void DDAStat_performStat(long jarg1, DDAStat jarg1_);
  public final static native void DDAStat_printStat(long jarg1, DDAStat jarg1_);
  public final static native void DDAStat_printStatPerQuery(long jarg1, DDAStat jarg1_, long jarg2, long jarg3);
  public final static native void DDAStat_getNumOfOOBQuery(long jarg1, DDAStat jarg1_);
  public final static native void DDAStat_setMemUsageBefore(long jarg1, DDAStat jarg1_, long jarg2, long jarg3);
  public final static native void DDAStat_setMemUsageAfter(long jarg1, DDAStat jarg1_, long jarg2, long jarg3);
  public final static native long DDAStat_getSVFG(long jarg1, DDAStat jarg1_);
  public final static native long DDAStat_getPTA(long jarg1, DDAStat jarg1_);
  public final static native long DDAStat_getStrongUpdateStores(long jarg1, DDAStat jarg1_);
  public final static native void delete_DDAStat(long jarg1);
  public final static native long new_DDAClient(long jarg1, SVFModule jarg1_);
  public final static native void delete_DDAClient(long jarg1);
  public final static native void DDAClient_initialise(long jarg1, DDAClient jarg1_, long jarg2, SVFModule jarg2_);
  public final static native long DDAClient_collectCandidateQueries(long jarg1, DDAClient jarg1_, long jarg2);
  public final static native long DDAClient_getCandidateQueries(long jarg1, DDAClient jarg1_);
  public final static native void DDAClient_handleStatement(long jarg1, DDAClient jarg1_, long jarg2, long jarg3);
  public final static native void DDAClient_setPAG(long jarg1, DDAClient jarg1_, long jarg2);
  public final static native void DDAClient_setCurrentQueryPtr(long jarg1, DDAClient jarg1_, long jarg2);
  public final static native void DDAClient_setQuery(long jarg1, DDAClient jarg1_, long jarg2);
  public final static native long DDAClient_getModule(long jarg1, DDAClient jarg1_);
  public final static native void DDAClient_answerQueries(long jarg1, DDAClient jarg1_, long jarg2, PointerAnalysis jarg2_);
  public final static native void DDAClient_performStat(long jarg1, DDAClient jarg1_, long jarg2, PointerAnalysis jarg2_);
  public final static native void DDAClient_collectWPANum(long jarg1, DDAClient jarg1_, long jarg2, SVFModule jarg2_);
  public final static native long new_FunptrDDAClient(long jarg1, SVFModule jarg1_);
  public final static native void delete_FunptrDDAClient(long jarg1);
  public final static native long FunptrDDAClient_collectCandidateQueries(long jarg1, FunptrDDAClient jarg1_, long jarg2);
  public final static native void FunptrDDAClient_performStat(long jarg1, FunptrDDAClient jarg1_, long jarg2, PointerAnalysis jarg2_);
  public final static native void DDAPass_ID_set(char jarg1);
  public final static native char DDAPass_ID_get();
  public final static native long new_DDAPass();
  public final static native void delete_DDAPass(long jarg1);
  public final static native void DDAPass_getAnalysisUsage(long jarg1, DDAPass jarg1_, long jarg2);
  public final static native long DDAPass_getAdjustedAnalysisPointer(long jarg1, DDAPass jarg1_, long jarg2);
  public final static native long DDAPass_alias__SWIG_0(long jarg1, DDAPass jarg1_, long jarg2, long jarg3);
  public final static native long DDAPass_alias__SWIG_1(long jarg1, DDAPass jarg1_, long jarg2, long jarg3);
  public final static native boolean DDAPass_runOnModule__SWIG_0(long jarg1, DDAPass jarg1_, long jarg2, SVFModule jarg2_);
  public final static native boolean DDAPass_runOnModule__SWIG_1(long jarg1, DDAPass jarg1_, long jarg2);
  public final static native void DDAPass_selectClient(long jarg1, DDAPass jarg1_, long jarg2, SVFModule jarg2_);
  public final static native long DDAPass_getPassName(long jarg1, DDAPass jarg1_);
  public final static native void DDAPass_printQueryPTS(long jarg1, DDAPass jarg1_);
  public final static native void DDAPass_runPointerAnalysis(long jarg1, DDAPass jarg1_, long jarg2, SVFModule jarg2_, long jarg3);
  public final static native void DDAPass_answerQueries(long jarg1, DDAPass jarg1_, long jarg2, PointerAnalysis jarg2_);
  public final static native void DDAPass_initCxtInsensitiveEdges(long jarg1, DDAPass jarg1_, long jarg2, PointerAnalysis jarg2_, long jarg3, long jarg4, long jarg5, ConstSVFGEdgeSet jarg5_);
  public final static native boolean DDAPass_edgeInSVFGSCC(long jarg1, DDAPass jarg1_, long jarg2, long jarg3);
  public final static native boolean DDAPass_edgeInCallGraphSCC(long jarg1, DDAPass jarg1_, long jarg2, PointerAnalysis jarg2_, long jarg3);
  public final static native void DDAPass_collectCxtInsenEdgeForRecur(long jarg1, DDAPass jarg1_, long jarg2, PointerAnalysis jarg2_, long jarg3, long jarg4, ConstSVFGEdgeSet jarg4_);
  public final static native void DDAPass_collectCxtInsenEdgeForVFCycle(long jarg1, DDAPass jarg1_, long jarg2, PointerAnalysis jarg2_, long jarg3, long jarg4, long jarg5, ConstSVFGEdgeSet jarg5_);
  public final static native void DDAPass__pta_set(long jarg1, DDAPass jarg1_, long jarg2, PointerAnalysis jarg2_);
  public final static native long DDAPass__pta_get(long jarg1, DDAPass jarg1_);
  public final static native void DDAPass__client_set(long jarg1, DDAPass jarg1_, long jarg2, DDAClient jarg2_);
  public final static native long DDAPass__client_get(long jarg1, DDAPass jarg1_);
  public final static native long BVDataPTAImpl_SWIGUpcast(long jarg1);
  public final static native long DDAStat_SWIGUpcast(long jarg1);
  public final static native long FunptrDDAClient_SWIGUpcast(long jarg1);
  public final static native long DDAPass_SWIGUpcast(long jarg1);
}
